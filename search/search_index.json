{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Key Mapper Documentation \u00b6 Key Mapper is a free and open source Android app that can map single or multiple key events to a custom action. This wiki aims to provide users with a comprehensive guide to using and setting up Key Mapper for typical implementations. For specific help with more complicated key maps or if this wiki does not answer your questions, you can join the Key Mapper Discord support server and ask for help. Get help Support the project","title":"Home"},{"location":"#welcome-to-key-mapper-documentation","text":"Key Mapper is a free and open source Android app that can map single or multiple key events to a custom action. This wiki aims to provide users with a comprehensive guide to using and setting up Key Mapper for typical implementations. For specific help with more complicated key maps or if this wiki does not answer your questions, you can join the Key Mapper Discord support server and ask for help. Get help Support the project","title":"Welcome to  Key Mapper Documentation"},{"location":"contributing/","text":"Becoming a tester \u00b6 You can get the apks for the pre-release versions in 2 ways: Join the Discord server and download the apks from the #testing-builds channel. Download the apk from GitHub Actions. This requires a GitHub account. You can get alpha builds here and beta builds here . Click on a 'workflow run' and then scroll down to see the 'artifacts'. If a build was successful then you can find the apk here. Info All testing builds have .ci.X at the end of the version name where 'X' is a number is incremented every time a new build is made. Builds are made when a new feature or bug fix is implemented. There are two types of pre-release versions: Alpha . These have \".alpha\" in the version name and are the most unstable. Expect the most crashes and broken features in these builds. BEWARE! Your data in Key Mapper isn't considered compatible between alpha builds so it is possible that Key Mapper will crash and refuse to fix itself. Beta . These builds have some of the latest features and contain a few bugs. You can safely update between versions. These have \".beta.X\" in the version name. These are pre-release builds for the the open-testing channel on Google Play and F-droid always has beta builds. When all known bugs are fixed a new build is released to the app stores. How can I help? \u00b6 Test and experiment new features. All features and bug-fixes that are being worked on for a release can be found on the Projects page here . If you find any bugs or crashes then report them by following the guide here . Contributing code \u00b6 Committing \u00b6 Versioning \u00b6 Code Style \u00b6 Follow Google's Kotlin style guide. https://developer.android.com/kotlin/style-guide Translating \u00b6 You can translate this project on the CrowdIn page . Translations will be merged into production once 70% of the language has been translated. This is to improve the user experience. If your language isn't available on the CrowdIn page then contact the developer so we can add it. Our contact details are in the footer of every page on this site. We really appreciate translators so thank you! \ud83d\ude42 Consistency Standards \u00b6 Writing \u00b6 It is important to use consistent language within the app's code and documentation. Make sure that your submissions comply with these standards. If you have noticed inconsistencies you can alert the developer with an issue or in the Discord . These standards don't need to be followed in places other than the documentation and source code. Follow this Material Design guide . Case \u00b6 No title case unless it is the title of a webpage, section heading. No title case in the string resources in the source code at all. Here are words and phrases that have been spelt inconsistently by the developer and everyone should follow these guidelines. Terminology Correct \ud83d\ude0d Incorrect \ud83d\udc7f The app's name. Key Mapper Use Keyboard/Button Mapper when advertising the app as this is how it appears in the app stores. You can use \"Key Mapper\" in the rest of the advert since this is much shorter. key mapper, keymapper A key map key map . KeyMap, keyMap in variable and class names. keymap, Key Map. key-map. Key-Map. A trigger trigger Trigger An action action Action A constraint constraint Constraint A key event key event Key Event, keyevent A key code key code . In variable and class names it should be keyCode instead of keycode. keycode, Key Code A home screen home screen homescreen, Home Screen A backup/ to back up Noun: backup . Verb; back up Backup when using the verb. Documentation \u00b6 Headings \u00b6 If a heading is for a particular feature then it should include the minimum supported Key Mapper version except version 2.0. E.g \"Trigger When Screen is Off (ROOT, 2.1.0+, Android 8.1+)\"","title":"Contributing"},{"location":"contributing/#becoming-a-tester","text":"You can get the apks for the pre-release versions in 2 ways: Join the Discord server and download the apks from the #testing-builds channel. Download the apk from GitHub Actions. This requires a GitHub account. You can get alpha builds here and beta builds here . Click on a 'workflow run' and then scroll down to see the 'artifacts'. If a build was successful then you can find the apk here. Info All testing builds have .ci.X at the end of the version name where 'X' is a number is incremented every time a new build is made. Builds are made when a new feature or bug fix is implemented. There are two types of pre-release versions: Alpha . These have \".alpha\" in the version name and are the most unstable. Expect the most crashes and broken features in these builds. BEWARE! Your data in Key Mapper isn't considered compatible between alpha builds so it is possible that Key Mapper will crash and refuse to fix itself. Beta . These builds have some of the latest features and contain a few bugs. You can safely update between versions. These have \".beta.X\" in the version name. These are pre-release builds for the the open-testing channel on Google Play and F-droid always has beta builds. When all known bugs are fixed a new build is released to the app stores.","title":"Becoming a tester"},{"location":"contributing/#how-can-i-help","text":"Test and experiment new features. All features and bug-fixes that are being worked on for a release can be found on the Projects page here . If you find any bugs or crashes then report them by following the guide here .","title":"How can I help?"},{"location":"contributing/#contributing-code","text":"","title":"Contributing code"},{"location":"contributing/#committing","text":"","title":"Committing"},{"location":"contributing/#versioning","text":"","title":"Versioning"},{"location":"contributing/#code-style","text":"Follow Google's Kotlin style guide. https://developer.android.com/kotlin/style-guide","title":"Code Style"},{"location":"contributing/#translating","text":"You can translate this project on the CrowdIn page . Translations will be merged into production once 70% of the language has been translated. This is to improve the user experience. If your language isn't available on the CrowdIn page then contact the developer so we can add it. Our contact details are in the footer of every page on this site. We really appreciate translators so thank you! \ud83d\ude42","title":"Translating"},{"location":"contributing/#consistency-standards","text":"","title":"Consistency Standards"},{"location":"contributing/#writing","text":"It is important to use consistent language within the app's code and documentation. Make sure that your submissions comply with these standards. If you have noticed inconsistencies you can alert the developer with an issue or in the Discord . These standards don't need to be followed in places other than the documentation and source code. Follow this Material Design guide .","title":"Writing"},{"location":"contributing/#case","text":"No title case unless it is the title of a webpage, section heading. No title case in the string resources in the source code at all. Here are words and phrases that have been spelt inconsistently by the developer and everyone should follow these guidelines. Terminology Correct \ud83d\ude0d Incorrect \ud83d\udc7f The app's name. Key Mapper Use Keyboard/Button Mapper when advertising the app as this is how it appears in the app stores. You can use \"Key Mapper\" in the rest of the advert since this is much shorter. key mapper, keymapper A key map key map . KeyMap, keyMap in variable and class names. keymap, Key Map. key-map. Key-Map. A trigger trigger Trigger An action action Action A constraint constraint Constraint A key event key event Key Event, keyevent A key code key code . In variable and class names it should be keyCode instead of keycode. keycode, Key Code A home screen home screen homescreen, Home Screen A backup/ to back up Noun: backup . Verb; back up Backup when using the verb.","title":"Case"},{"location":"contributing/#documentation","text":"","title":"Documentation"},{"location":"contributing/#headings","text":"If a heading is for a particular feature then it should include the minimum supported Key Mapper version except version 2.0. E.g \"Trigger When Screen is Off (ROOT, 2.1.0+, Android 8.1+)\"","title":"Headings"},{"location":"faq/","text":"This page serves to answer frequently asked questions about Key Mapper, and help solve any problems you may be facing. See the Quick Start Guide for more general help with using Key Mapper. \"Can I remap joysticks/dpad/mouse buttons/mouse motion?\" \u00b6 No. Here is why: Joysticks are complicated to remap because they are axes, so their inputs are a range depending on how much you press the stick. It would be a lot of work to integrate them into Key Mapper. The developer currently doesn't have a way to interpret the motion, and if they did, they might not add it into this app anyway because Key Mapper is for mapping keys, not motion. The D-pad is interpreted differently by Android to other keys. That makes it hard to remap. However, the developer has found a way that might be able to remap them. Therefore you can consider this a planned feature. It might take something like 6 months to see this in a build of Key Mapper. Mouse buttons are not possible to remap with an accessibility service. There will never be support for them in this app. If other apps can do it, they do not work the same way Key Mapper does. If you want to remap mouse buttons, do not use Key Mapper. Remapping the movement of the mouse is completely out of scope for this app. This is an app for remapping keys, not motion. If you want that kind of functionality, please don't look for it in Key Mapper or request this as a feature. There may be other apps that can help you (I don't know any of them though). \"Key Mapper keeps randomly stopping/crashing/bugging/freezing\" \u00b6 Please follow the following steps: Turn off battery and memory optimisations in your device settings. This is especially important for Huawei and Xiaomi devices, and devices with 2GB of RAM or less. You can read about how to do this on your particular device at dontkillmyapp.com Reboot your device. This is important for everyone to do if you are experiencing an issue with the app stopping. You must try rebooting your device. It works most of the time. If you have tried BOTH steps and Key Mapper still stops working randomly, consider how you are using the app. If you have low-end hardware, and are playing a game while using repeating key maps, it's probably not a bug. It's probably just too much for your device. If you think you are using Key Mapper in a reasonable way and still experience random crashes, ask about it in the discord server. \"How do I change the keyboard?\" \u00b6 There are multiple ways to do this. Tap the keyboard button at the bottom of your display when you are typing something. Not all devices have this and some devices have this feature hidden behind a setting somewhere. Tap the notification that allows you to change the keyboard when you are typing something. Not all devices have this. Open Key Mapper and tap \"show input method picker\" in the menu . Tip If you want to switch between one of the Key Mapper keyboards and a normal keyboard when a device, such as a keyboard or game controller, connects/disconnects then Key Mapper can do this for you automatically. Set it up here . \"My keyboard doesn't appear when using the app.\" \u00b6 Key Mapper Basic Input Method (the keyboard built-in to the app) has no GUI/buttons. You can install the Key Mapper GUI Keyboard to get a proper keyboard that can also perform Key Mapper actions. \"Why don't my volume buttons work when I press them?\" \u00b6 Give the app Do Not Disturb access in your device settings. At the top of the homescreen in the Key Mapper app there is a \"Fix\" button to do this. \"Why aren't the buttons on my Bluetooth device detected?\" \u00b6 Many Bluetooth devices (like headphones) aren't supported by Key Mapper out of the box. Bluetooth keyboards work most of the time. If you are willing and able to do some simple debugging, perhaps by installing utility apps or using ADB, join the Discord server and we will try our best to get it working for you. \"Why doesn't the app open in Dex mode?\" \u00b6 Samsung Dex doesn't allow apps with a 3rd party keyboard to open while in Dex mode. You can still configure key maps while out of Dex mode and your key maps which don't require a Key Mapper keyboard will still work in Dex mode. \"Why doesn't the app uninstall?\" \u00b6 You have probably enabled the app's device administrator in your device's settings. To uninstall the app, you must turn it off. The location of the device admin settings page varies on devices but on skins close to stock-Android it is under \"Security\" -> \"Device admin apps\". If you need help, ask in the Discord server. \"Why can't I remap some of my Joy Con buttons?\" \u00b6 Not all the Joy Con buttons are visible to accessibility services. There isn't anything the developer can do. I tested the app on SwitchRoot Android and this is what works... Working: ZL (Button L2) L (Button L1) - (Select) + (Start) Left analog stick button (unknown keycode 0) ZR (Button R2) R (Button R1) X (Button X) Y (Button Y) B (Button B) A (Button A) Home (Home) Volume up (Vol up) Volume down (Vol down) Not working: Screenshot button All D-Pad buttons (used by OS) Both analog sticks (used by OS) Right analog stick button SR and SL (left joycon) SR and SL (right joycon) Power button \"Add on-screen buttons to Key Mapper\" \u00b6 On-screen buttons are not a planned feature. In the near future, it will not be possible for apps to do this, even if some apps can right now. There is currently no work being done on adding on-screen buttons. Google is removing the ability for apps to draw overlays over other apps. This is called the \"system alert window\" feature in the developer world. Android Go devices already can't do this. \"A game doesn't detect my key maps\" \u00b6 Unsupported games - Fortnite There is no guarantee that your key maps will work in games. The app isn't designed for it. Follow this guide if you are remapping buttons on a game controller to different buttons on a game controller. Connect your controller to your device. Create a trigger for whatever button you want to remap. Press \"Add Action\" and create a \"Key Event\" action by going to the \"Key Event\" tab. Choose your keycode AND select your controller as the device in the dropdown menu. Save the keymap and hopefully it will work. \"How can I 'jump bridge' with Key Mapper? / How can I use Key Mapper for Minecraft PVP?\" \u00b6 This is not an app designed for gaming. Please look elsewhere for help with this, such as YouTube tutorials or ask in the discord server. Also note that use of 'jump bridging' or very fast attacks on Minecraft servers where it is not allowed has absolutely nothing to do with the developer and it is not endorsed or encouraged. Again, this is not an app optimised for playing mobile games. \"Can I use the app on Chromebook?\" \u00b6 Not all features work on Chromebook. The app is not supported on Chromebook. Key Mapper can't \"tap the screen\" for obvious reasons. If you want to play a game on Chromebook using Key Mapper with keyboard controls (especially Among Us ) then you are unlikely to be able to do so. That being said, many features should work, such as remapping keyboard buttons. \"Can I remap on-screen controls to buttons with Key Mapper?\" \u00b6 Technically yes but it would be a horrendous gaming experience. There is an action in Key Mapper to touch the screen but Key Mapper is only allowed to tap/swipe in one place at a time. Therefore, you wouldn't be able to tap forward on an on-screen joystick and shoot at the same time for example. This is how the Android API works and there is nothing I can do to change it. Ask for help","title":"FAQ"},{"location":"faq/#can-i-remap-joysticksdpadmouse-buttonsmouse-motion","text":"No. Here is why: Joysticks are complicated to remap because they are axes, so their inputs are a range depending on how much you press the stick. It would be a lot of work to integrate them into Key Mapper. The developer currently doesn't have a way to interpret the motion, and if they did, they might not add it into this app anyway because Key Mapper is for mapping keys, not motion. The D-pad is interpreted differently by Android to other keys. That makes it hard to remap. However, the developer has found a way that might be able to remap them. Therefore you can consider this a planned feature. It might take something like 6 months to see this in a build of Key Mapper. Mouse buttons are not possible to remap with an accessibility service. There will never be support for them in this app. If other apps can do it, they do not work the same way Key Mapper does. If you want to remap mouse buttons, do not use Key Mapper. Remapping the movement of the mouse is completely out of scope for this app. This is an app for remapping keys, not motion. If you want that kind of functionality, please don't look for it in Key Mapper or request this as a feature. There may be other apps that can help you (I don't know any of them though).","title":"\"Can I remap joysticks/dpad/mouse buttons/mouse motion?\""},{"location":"faq/#key-mapper-keeps-randomly-stoppingcrashingbuggingfreezing","text":"Please follow the following steps: Turn off battery and memory optimisations in your device settings. This is especially important for Huawei and Xiaomi devices, and devices with 2GB of RAM or less. You can read about how to do this on your particular device at dontkillmyapp.com Reboot your device. This is important for everyone to do if you are experiencing an issue with the app stopping. You must try rebooting your device. It works most of the time. If you have tried BOTH steps and Key Mapper still stops working randomly, consider how you are using the app. If you have low-end hardware, and are playing a game while using repeating key maps, it's probably not a bug. It's probably just too much for your device. If you think you are using Key Mapper in a reasonable way and still experience random crashes, ask about it in the discord server.","title":"\"Key Mapper keeps randomly stopping/crashing/bugging/freezing\""},{"location":"faq/#how-do-i-change-the-keyboard","text":"There are multiple ways to do this. Tap the keyboard button at the bottom of your display when you are typing something. Not all devices have this and some devices have this feature hidden behind a setting somewhere. Tap the notification that allows you to change the keyboard when you are typing something. Not all devices have this. Open Key Mapper and tap \"show input method picker\" in the menu . Tip If you want to switch between one of the Key Mapper keyboards and a normal keyboard when a device, such as a keyboard or game controller, connects/disconnects then Key Mapper can do this for you automatically. Set it up here .","title":"\"How do I change the keyboard?\""},{"location":"faq/#my-keyboard-doesnt-appear-when-using-the-app","text":"Key Mapper Basic Input Method (the keyboard built-in to the app) has no GUI/buttons. You can install the Key Mapper GUI Keyboard to get a proper keyboard that can also perform Key Mapper actions.","title":"\"My keyboard doesn't appear when using the app.\""},{"location":"faq/#why-dont-my-volume-buttons-work-when-i-press-them","text":"Give the app Do Not Disturb access in your device settings. At the top of the homescreen in the Key Mapper app there is a \"Fix\" button to do this.","title":"\"Why don't my volume buttons work when I press them?\""},{"location":"faq/#why-arent-the-buttons-on-my-bluetooth-device-detected","text":"Many Bluetooth devices (like headphones) aren't supported by Key Mapper out of the box. Bluetooth keyboards work most of the time. If you are willing and able to do some simple debugging, perhaps by installing utility apps or using ADB, join the Discord server and we will try our best to get it working for you.","title":"\"Why aren't the buttons on my Bluetooth device detected?\""},{"location":"faq/#why-doesnt-the-app-open-in-dex-mode","text":"Samsung Dex doesn't allow apps with a 3rd party keyboard to open while in Dex mode. You can still configure key maps while out of Dex mode and your key maps which don't require a Key Mapper keyboard will still work in Dex mode.","title":"\"Why doesn't the app open in Dex mode?\""},{"location":"faq/#why-doesnt-the-app-uninstall","text":"You have probably enabled the app's device administrator in your device's settings. To uninstall the app, you must turn it off. The location of the device admin settings page varies on devices but on skins close to stock-Android it is under \"Security\" -> \"Device admin apps\". If you need help, ask in the Discord server.","title":"\"Why doesn't the app uninstall?\""},{"location":"faq/#why-cant-i-remap-some-of-my-joy-con-buttons","text":"Not all the Joy Con buttons are visible to accessibility services. There isn't anything the developer can do. I tested the app on SwitchRoot Android and this is what works... Working: ZL (Button L2) L (Button L1) - (Select) + (Start) Left analog stick button (unknown keycode 0) ZR (Button R2) R (Button R1) X (Button X) Y (Button Y) B (Button B) A (Button A) Home (Home) Volume up (Vol up) Volume down (Vol down) Not working: Screenshot button All D-Pad buttons (used by OS) Both analog sticks (used by OS) Right analog stick button SR and SL (left joycon) SR and SL (right joycon) Power button","title":"\"Why can't I remap some of my Joy Con buttons?\""},{"location":"faq/#add-on-screen-buttons-to-key-mapper","text":"On-screen buttons are not a planned feature. In the near future, it will not be possible for apps to do this, even if some apps can right now. There is currently no work being done on adding on-screen buttons. Google is removing the ability for apps to draw overlays over other apps. This is called the \"system alert window\" feature in the developer world. Android Go devices already can't do this.","title":"\"Add on-screen buttons to Key Mapper\""},{"location":"faq/#a-game-doesnt-detect-my-key-maps","text":"Unsupported games - Fortnite There is no guarantee that your key maps will work in games. The app isn't designed for it. Follow this guide if you are remapping buttons on a game controller to different buttons on a game controller. Connect your controller to your device. Create a trigger for whatever button you want to remap. Press \"Add Action\" and create a \"Key Event\" action by going to the \"Key Event\" tab. Choose your keycode AND select your controller as the device in the dropdown menu. Save the keymap and hopefully it will work.","title":"\"A game doesn't detect my key maps\""},{"location":"faq/#how-can-i-jump-bridge-with-key-mapper-how-can-i-use-key-mapper-for-minecraft-pvp","text":"This is not an app designed for gaming. Please look elsewhere for help with this, such as YouTube tutorials or ask in the discord server. Also note that use of 'jump bridging' or very fast attacks on Minecraft servers where it is not allowed has absolutely nothing to do with the developer and it is not endorsed or encouraged. Again, this is not an app optimised for playing mobile games.","title":"\"How can I 'jump bridge' with Key Mapper? / How can I use Key Mapper for Minecraft PVP?\""},{"location":"faq/#can-i-use-the-app-on-chromebook","text":"Not all features work on Chromebook. The app is not supported on Chromebook. Key Mapper can't \"tap the screen\" for obvious reasons. If you want to play a game on Chromebook using Key Mapper with keyboard controls (especially Among Us ) then you are unlikely to be able to do so. That being said, many features should work, such as remapping keyboard buttons.","title":"\"Can I use the app on Chromebook?\""},{"location":"faq/#can-i-remap-on-screen-controls-to-buttons-with-key-mapper","text":"Technically yes but it would be a horrendous gaming experience. There is an action in Key Mapper to touch the screen but Key Mapper is only allowed to tap/swipe in one place at a time. Therefore, you wouldn't be able to tap forward on an on-screen joystick and shoot at the same time for example. This is how the Android API works and there is nothing I can do to change it. Ask for help","title":"\"Can I remap on-screen controls to buttons with Key Mapper?\""},{"location":"known-issues/","text":"Volume increases to max/minimum when pressing power and the respective volume button when the device is off \u00b6 This seems to be a bug with accessibility services on Android Pie+ on some devices. It also happens with the Macrodroid app when you only enable their accessibility service which filters key events. I tested Key Mapper with no code in the onKeyEvent function in the accessibility service and it still happens. These are the devices that I've tested. image/svg+xml Rooted OxygenOS Android 10 OnePlus 6T image/svg+xml Rooted stock Android 9 Pie custom ROM on the OnePlus 6T image/svg+xml \u200bNon-rooted OxygenOS Android 10 OnePlus 7 Pro image/svg+xml Android 10 on the Pixel 2","title":"Known Issues"},{"location":"known-issues/#volume-increases-to-maxminimum-when-pressing-power-and-the-respective-volume-button-when-the-device-is-off","text":"This seems to be a bug with accessibility services on Android Pie+ on some devices. It also happens with the Macrodroid app when you only enable their accessibility service which filters key events. I tested Key Mapper with no code in the onKeyEvent function in the accessibility service and it still happens. These are the devices that I've tested. image/svg+xml Rooted OxygenOS Android 10 OnePlus 6T image/svg+xml Rooted stock Android 9 Pie custom ROM on the OnePlus 6T image/svg+xml \u200bNon-rooted OxygenOS Android 10 OnePlus 7 Pro image/svg+xml Android 10 on the Pixel 2","title":"Volume increases to max/minimum when pressing power and the respective volume button when the device is off"},{"location":"quick-start/","text":"This page aims to give users an introduction to the Key Mapper interface and a demonstration on how to perform typical tasks with the app. For specific troubleshooting, consult the FAQ. Info Where screenshots are necessary, this guide uses two devices to demonstrate. OnePlus 7 Pro, Android 10, Dark theme, 1440p, tiny font size Samsung J3 6, Android 5, Light theme, 720p, medium font size App interface pictured: keymapper-2.3.0-alpha-ci.778 This guide is updated to match current stable release UI. Report inaccuracies. First time setup \u00b6 When you open Key Mapper, you will be presented with this screen. This screen is referred to as the Key Mapper home screen. Set up the accessibility service \u00b6 Tapping the FIX button next to the accessibility service prompt will allow you to grant Key Mapper permission to run its accessibility service. You must do this for the app to work at all. You can then tap Key Mapper in your list of available services. There may be many others on this screen and your interface may be slightly different. Attention If nothing happens when you tap FIX, or if you can't enable the service, see this page or ask for help in the Discord server. Set up a Key Mapper keyboard \u00b6 MUST READ to avoid confusion and headaches 'A Key Mapper keyboard' through out this documentation refers to any input method that works with Key Mapper. There are only 2 right now. The one built-in to Key Mapper is called the \"Key Mapper Basic Input Method\". This one has NO on-screen keyboard. You won't see a keyboard when you want to type something. This keyboard doesn't support non-English languages! If you want an on-screen keyboard to be available while using Key Mapper or if you need support for non-English languages, you need to install \"Key Mapper GUI Keyboard\". It is available on the Google Play Store , F-Droid and GitHub. 'Enable a Key Mapper keyboard' means turning on the input method in your device's 'Language & Input' settings. The location of these settings is often called something else. 'Use/choose a Key Mapper keyboard' means making the Key Mapper keyboard that you have installed the one that shows up when you want to type something. Multiple ways of doing this are described here . Android allows multiple input methods to be enabled but only one to be used at a time. Tapping the FIX button next to the input method prompt will allow you to enable a Key Mapper keyboard. If you want to perform actions like pressing keyboard keys or entering text you must enable this. If you have only installed the Key Mapper app, your list of available keyboards will contain \"Key Mapper Basic Input Method\" only. If you aim to use a physical keyboard (not on-screen) when using Key Mapper, this will be suitable for you. Disable app-killing \u00b6 Important If you are using a Huawei or Xiaomi branded device, a device with 2GB of RAM or less, or intend to use the app while playing a mobile game, it is especially important to follow the next step. Tapping the FIX button next to the battery optimisation prompt will allow you to turn off features of your device that may prevent Key Mapper's essential services from running in the background. This is usually the source of the common 'Key Mapper randomly stops working' issue. Older devices (such as my Android 5 device pictured here) do not have this prompt in Key Mapper. However, I was still able to find the setting in my device settings app. Read more below for details. The screen that opens after tapping FIX may vary depending on your device. In my case, to disable optimisation I found the app(s) in the list, tapped them to open their settings, and chose 'Don't optimise' and on the second device, 'Disabled'. Tip There is an excellent guide at dontkillmyapp.com that explains how to disable battery and/or memory optimisation for your specific device. If Key Mapper randomly stops working even after you complete these steps, ask for help in the Discord server. Setup the ability to properly remap volume buttons \u00b6 If you want to remap volume buttons and use them when Do Not Disturb is enabled, you should grant Key Mapper permission to do so. If you have an older device, you may not have this as an option. Tapping FIX will allow you to grant the permission. Find Key Mapper in the list and tap it in order to choose 'Allowed'. Most people can ignore the final prompt. If you want to create an action to change input method, you need to grant an additional set of permissions called WRITE_SECURE_SETTINGS. For help with this click here. Creating a key map \u00b6 Summary A key map is an association between a user input (such as pushing a key or button) and a response from the device (sending information about what key was pressed and for how long). In Key Mapper, 'user inputs' that are recognised by the app are called 'triggers'. The responses from your device that were due to a trigger being pressed are called 'actions'. Key Mapper lets you assign actions to triggers that may be different from their default use. A 'volume up' trigger normally increases the volume when pressed, but this app can change that to something else. This guide deals with 'Key event' triggers. If you want to remap fingerprint gestures, check out this guide. Setting the trigger(s) \u00b6 To create your first key map, tap the + icon at the bottom of the Key Mapper home screen. You will see one of the two screens below. In either case, the first step is to record a trigger. Tap the red 'Record trigger' button and then press the physical button that you want to change the function of. In this guide I will demonstrate with 'volume down'. Key Mapper can also create a key map with multiple triggers. If you want to use more than one trigger for one key map, you can press the buttons in the order you will press them to execute the key map. For example, if you wanted to map 'Ctrl' + 'H' to show the device home menu, you should press 'Ctrl' and then 'H'. Key Mapper can also remap fingerprint gestures on many devices. You can learn how to do this here. Setting the action(s) \u00b6 Next, it's time to choose an action. If you have a high-resolution display, you will see the 'Add action' button at the bottom of the screen (pictured left). Otherwise, tap the 'Actions' tab at the top of the screen (pictured right). Tap the 'Add action' button at the bottom of this screen. The action selection screen will open. Here you can choose from a wide variety of actions. Swipe left and right to change category, and scroll up and down the list until you find the action you want to add. Below is a table of the different kinds of actions you can choose from in each tab. Tab Description App Choose an app to open when you press your trigger. App shortcut Choose an app operation (such as sharing location, checking local traffic, sending a text message) Key code Emulate a keyboard key press (such as an alphanumeric character or multimedia key) System Choose a system operation (such as toggling Bluetooth, opening the home menu, toggling flashlight) Key An alternative way to choose a key press action, by pressing the key that you want to map to. Tap screen (2.1.0+) Emulate a screen tap at a specific location on your screen. Key event (2.1.0+) Emulate a key press from a specifc connected device. Text Emulate typing a string. Intent (2.3.0+) See this page. Phone call (2.3.0+) Call a telephone number. Network and carrier rates will apply. Unsupported actions A list of actions that your device won't allow you to use. Android frequently changes what users are allowed to do between versions. For this simple demonstration I will choose KEYCODE_E from the Keycode tab. This action will emulate pressing an E key on a keyboard. Tip Key Mapper can also create a key map with multiple actions. If you want to add more actions to execute in series you can do so by tapping 'Add action' again and choosing the next action in the chain. In the next section you can specify a delay between those actions if you wish. Customising a key map \u00b6 You may wish to customise your triggers and actions to have specific behaviours. Most people will want to do at least some customisation. Trigger settings \u00b6 Starting with the triggers, tap the 3 dot menu to the right of the trigger's name to bring up the following menu. You can choose from four different settings. Turning on \"Do not override default action\" will mean that Key Mapper will not replace the normal operation of your trigger, instead it will execute the key map as well as the default operation. One trigger can have three different click types. Choose from short press, long press and double press. Read more. Customising actions \u00b6 Next, tap the 3 stacked dots to the right of the action's name to bring up the following menu. Here you can customise a lot of the operation of your key map, including timing and multipliers. The following details refer to action timing settings. Delay before next action (ms) Key Mapper 2.2.0+ This option takes effect if you have multiple actions in your mapping. The slider sets the amount of time between this action and the next. Action count Key Mapper 2.1.0+ This option serves as a multiplier. If action count is equal to 1 when your mapping is triggered then your action will be performed once. If it is equal to 5 then the action will be performed 5 times, etc. Repeating actions \u00b6 Repeat When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. The default settings in Key Mapper are designed to emulate that behaviour when 'Repeat' is turned on. Repeat every... (ms) This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation: Time period (ms) = 1000 / Frequency ('cps') Delay until repeat... (ms) This option sets the amount of time between the first action and the second action (or the first repeat). This is part of the keyboard key behaviour simulation. If you want your repeating action to begin straight away, you can make this 0. Hold down actions \u00b6 Hold down Key Mapper 2.1.0+ This setting provides the ability to simulate holding down a key or tapping a coordinate (Android 8.0+). With this turned on (and repeat turned off), the default behaviour is that holding down your trigger will translate to holding down the action, for as long as you hold down the trigger. Hold down until trigger is... Released Pressed again Key Mapper 2.2.0+ This setting allows you to choose from two behaviours. If 'Released' is selected, holding down your trigger key(s) will translate to holding down the action, for as long as you hold down the trigger key(s). If you choose 'Pressed again', pressing your trigger key(s) once will be sufficient to start holding down the action. To stop the key map, you will need to press the trigger key(s) a second time. Using 'Hold down' and 'Repeat' together \u00b6 Key Mapper 2.2.0+ You can use turn on both of these settings to unlock an additional setting. A repeating hold down action behaves like a normal 'Repeat' action in that the action repeats itself with a given frequency. It also behaves like a 'Hold down' action in that each individual action will be held for a certain amount of time in each cycle. Hold down duration (ms) This allows you to set how long the action is held down for before repeating. Special options \u00b6 You can see explanations of more options here . Adding constraints \u00b6 Constraints allow you to restrict your mappings to only work in some situations. To add a constraint fron the 'Constraints and more' or 'Options' tab, tap 'Add constraint'. Go here to see how you can configure constraints. Managing key maps \u00b6 To save your key map and return to the home screen, tap the save icon in the bottom right of the screen. Now your key map should already be working. To pause/unpause all of your key maps, pull down the notification tray and tap the Key Mapper notification to toggle between Paused and Running. On the Key Mapper home screen, tap the 3 bar menu to open the Key Mapper general settings. You will see the following options. Here you can pause/unpause/enable/disable all of your key maps at once. You can also back up and restore key maps here. Learn more about back up and restore. Tapping 'Show input method picker' allows for switching between a Key Mapper compatible keyboard and any other. Tip Key Mapper can also remap fingerprint gestures on many devices. You can learn how to do this here. Go to top.","title":"Quick Start Guide"},{"location":"quick-start/#first-time-setup","text":"When you open Key Mapper, you will be presented with this screen. This screen is referred to as the Key Mapper home screen.","title":"First time setup"},{"location":"quick-start/#set-up-the-accessibility-service","text":"Tapping the FIX button next to the accessibility service prompt will allow you to grant Key Mapper permission to run its accessibility service. You must do this for the app to work at all. You can then tap Key Mapper in your list of available services. There may be many others on this screen and your interface may be slightly different. Attention If nothing happens when you tap FIX, or if you can't enable the service, see this page or ask for help in the Discord server.","title":"Set up the accessibility service"},{"location":"quick-start/#set-up-a-key-mapper-keyboard","text":"MUST READ to avoid confusion and headaches 'A Key Mapper keyboard' through out this documentation refers to any input method that works with Key Mapper. There are only 2 right now. The one built-in to Key Mapper is called the \"Key Mapper Basic Input Method\". This one has NO on-screen keyboard. You won't see a keyboard when you want to type something. This keyboard doesn't support non-English languages! If you want an on-screen keyboard to be available while using Key Mapper or if you need support for non-English languages, you need to install \"Key Mapper GUI Keyboard\". It is available on the Google Play Store , F-Droid and GitHub. 'Enable a Key Mapper keyboard' means turning on the input method in your device's 'Language & Input' settings. The location of these settings is often called something else. 'Use/choose a Key Mapper keyboard' means making the Key Mapper keyboard that you have installed the one that shows up when you want to type something. Multiple ways of doing this are described here . Android allows multiple input methods to be enabled but only one to be used at a time. Tapping the FIX button next to the input method prompt will allow you to enable a Key Mapper keyboard. If you want to perform actions like pressing keyboard keys or entering text you must enable this. If you have only installed the Key Mapper app, your list of available keyboards will contain \"Key Mapper Basic Input Method\" only. If you aim to use a physical keyboard (not on-screen) when using Key Mapper, this will be suitable for you.","title":"Set up a Key Mapper keyboard"},{"location":"quick-start/#disable-app-killing","text":"Important If you are using a Huawei or Xiaomi branded device, a device with 2GB of RAM or less, or intend to use the app while playing a mobile game, it is especially important to follow the next step. Tapping the FIX button next to the battery optimisation prompt will allow you to turn off features of your device that may prevent Key Mapper's essential services from running in the background. This is usually the source of the common 'Key Mapper randomly stops working' issue. Older devices (such as my Android 5 device pictured here) do not have this prompt in Key Mapper. However, I was still able to find the setting in my device settings app. Read more below for details. The screen that opens after tapping FIX may vary depending on your device. In my case, to disable optimisation I found the app(s) in the list, tapped them to open their settings, and chose 'Don't optimise' and on the second device, 'Disabled'. Tip There is an excellent guide at dontkillmyapp.com that explains how to disable battery and/or memory optimisation for your specific device. If Key Mapper randomly stops working even after you complete these steps, ask for help in the Discord server.","title":"Disable app-killing"},{"location":"quick-start/#setup-the-ability-to-properly-remap-volume-buttons","text":"If you want to remap volume buttons and use them when Do Not Disturb is enabled, you should grant Key Mapper permission to do so. If you have an older device, you may not have this as an option. Tapping FIX will allow you to grant the permission. Find Key Mapper in the list and tap it in order to choose 'Allowed'. Most people can ignore the final prompt. If you want to create an action to change input method, you need to grant an additional set of permissions called WRITE_SECURE_SETTINGS. For help with this click here.","title":"Setup the ability to properly remap volume buttons"},{"location":"quick-start/#creating-a-key-map","text":"Summary A key map is an association between a user input (such as pushing a key or button) and a response from the device (sending information about what key was pressed and for how long). In Key Mapper, 'user inputs' that are recognised by the app are called 'triggers'. The responses from your device that were due to a trigger being pressed are called 'actions'. Key Mapper lets you assign actions to triggers that may be different from their default use. A 'volume up' trigger normally increases the volume when pressed, but this app can change that to something else. This guide deals with 'Key event' triggers. If you want to remap fingerprint gestures, check out this guide.","title":"Creating a key map"},{"location":"quick-start/#setting-the-triggers","text":"To create your first key map, tap the + icon at the bottom of the Key Mapper home screen. You will see one of the two screens below. In either case, the first step is to record a trigger. Tap the red 'Record trigger' button and then press the physical button that you want to change the function of. In this guide I will demonstrate with 'volume down'. Key Mapper can also create a key map with multiple triggers. If you want to use more than one trigger for one key map, you can press the buttons in the order you will press them to execute the key map. For example, if you wanted to map 'Ctrl' + 'H' to show the device home menu, you should press 'Ctrl' and then 'H'. Key Mapper can also remap fingerprint gestures on many devices. You can learn how to do this here.","title":"Setting the trigger(s)"},{"location":"quick-start/#setting-the-actions","text":"Next, it's time to choose an action. If you have a high-resolution display, you will see the 'Add action' button at the bottom of the screen (pictured left). Otherwise, tap the 'Actions' tab at the top of the screen (pictured right). Tap the 'Add action' button at the bottom of this screen. The action selection screen will open. Here you can choose from a wide variety of actions. Swipe left and right to change category, and scroll up and down the list until you find the action you want to add. Below is a table of the different kinds of actions you can choose from in each tab. Tab Description App Choose an app to open when you press your trigger. App shortcut Choose an app operation (such as sharing location, checking local traffic, sending a text message) Key code Emulate a keyboard key press (such as an alphanumeric character or multimedia key) System Choose a system operation (such as toggling Bluetooth, opening the home menu, toggling flashlight) Key An alternative way to choose a key press action, by pressing the key that you want to map to. Tap screen (2.1.0+) Emulate a screen tap at a specific location on your screen. Key event (2.1.0+) Emulate a key press from a specifc connected device. Text Emulate typing a string. Intent (2.3.0+) See this page. Phone call (2.3.0+) Call a telephone number. Network and carrier rates will apply. Unsupported actions A list of actions that your device won't allow you to use. Android frequently changes what users are allowed to do between versions. For this simple demonstration I will choose KEYCODE_E from the Keycode tab. This action will emulate pressing an E key on a keyboard. Tip Key Mapper can also create a key map with multiple actions. If you want to add more actions to execute in series you can do so by tapping 'Add action' again and choosing the next action in the chain. In the next section you can specify a delay between those actions if you wish.","title":"Setting the action(s)"},{"location":"quick-start/#customising-a-key-map","text":"You may wish to customise your triggers and actions to have specific behaviours. Most people will want to do at least some customisation.","title":"Customising a key map"},{"location":"quick-start/#trigger-settings","text":"Starting with the triggers, tap the 3 dot menu to the right of the trigger's name to bring up the following menu. You can choose from four different settings. Turning on \"Do not override default action\" will mean that Key Mapper will not replace the normal operation of your trigger, instead it will execute the key map as well as the default operation. One trigger can have three different click types. Choose from short press, long press and double press. Read more.","title":"Trigger settings"},{"location":"quick-start/#customising-actions","text":"Next, tap the 3 stacked dots to the right of the action's name to bring up the following menu. Here you can customise a lot of the operation of your key map, including timing and multipliers. The following details refer to action timing settings. Delay before next action (ms) Key Mapper 2.2.0+ This option takes effect if you have multiple actions in your mapping. The slider sets the amount of time between this action and the next. Action count Key Mapper 2.1.0+ This option serves as a multiplier. If action count is equal to 1 when your mapping is triggered then your action will be performed once. If it is equal to 5 then the action will be performed 5 times, etc.","title":"Customising actions"},{"location":"quick-start/#repeating-actions","text":"Repeat When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. The default settings in Key Mapper are designed to emulate that behaviour when 'Repeat' is turned on. Repeat every... (ms) This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation: Time period (ms) = 1000 / Frequency ('cps') Delay until repeat... (ms) This option sets the amount of time between the first action and the second action (or the first repeat). This is part of the keyboard key behaviour simulation. If you want your repeating action to begin straight away, you can make this 0.","title":"Repeating actions"},{"location":"quick-start/#hold-down-actions","text":"Hold down Key Mapper 2.1.0+ This setting provides the ability to simulate holding down a key or tapping a coordinate (Android 8.0+). With this turned on (and repeat turned off), the default behaviour is that holding down your trigger will translate to holding down the action, for as long as you hold down the trigger. Hold down until trigger is... Released Pressed again Key Mapper 2.2.0+ This setting allows you to choose from two behaviours. If 'Released' is selected, holding down your trigger key(s) will translate to holding down the action, for as long as you hold down the trigger key(s). If you choose 'Pressed again', pressing your trigger key(s) once will be sufficient to start holding down the action. To stop the key map, you will need to press the trigger key(s) a second time.","title":"Hold down actions"},{"location":"quick-start/#using-hold-down-and-repeat-together","text":"Key Mapper 2.2.0+ You can use turn on both of these settings to unlock an additional setting. A repeating hold down action behaves like a normal 'Repeat' action in that the action repeats itself with a given frequency. It also behaves like a 'Hold down' action in that each individual action will be held for a certain amount of time in each cycle. Hold down duration (ms) This allows you to set how long the action is held down for before repeating.","title":"Using 'Hold down' and 'Repeat' together"},{"location":"quick-start/#special-options","text":"You can see explanations of more options here .","title":"Special options"},{"location":"quick-start/#adding-constraints","text":"Constraints allow you to restrict your mappings to only work in some situations. To add a constraint fron the 'Constraints and more' or 'Options' tab, tap 'Add constraint'. Go here to see how you can configure constraints.","title":"Adding constraints"},{"location":"quick-start/#managing-key-maps","text":"To save your key map and return to the home screen, tap the save icon in the bottom right of the screen. Now your key map should already be working. To pause/unpause all of your key maps, pull down the notification tray and tap the Key Mapper notification to toggle between Paused and Running. On the Key Mapper home screen, tap the 3 bar menu to open the Key Mapper general settings. You will see the following options. Here you can pause/unpause/enable/disable all of your key maps at once. You can also back up and restore key maps here. Learn more about back up and restore. Tapping 'Show input method picker' allows for switching between a Key Mapper compatible keyboard and any other. Tip Key Mapper can also remap fingerprint gestures on many devices. You can learn how to do this here. Go to top.","title":"Managing key maps"},{"location":"report-issues/","text":"multiple ways information required: version name: the FULLLL version name. Show how to find this in the app. github issue discord server email the developer (other two are really preferred because quick conversation and sharing files is more difficult with email)","title":"Report Issues"},{"location":"includes/action-type-list/","text":"Tab Description App Choose an app to open when you press your trigger. App shortcut Choose an app operation (such as sharing location, checking local traffic, sending a text message) Key code Emulate a keyboard key press (such as an alphanumeric character or multimedia key) System Choose a system operation (such as toggling Bluetooth, opening the home menu, toggling flashlight) Key An alternative way to choose a key press action, by pressing the key that you want to map to. Tap screen (2.1.0+) Emulate a screen tap at a specific location on your screen. Key event (2.1.0+) Emulate a key press from a specifc connected device. Text Emulate typing a string. Intent (2.3.0+) See this page. Phone call (2.3.0+) Call a telephone number. Network and carrier rates will apply. Unsupported actions A list of actions that your device won't allow you to use. Android frequently changes what users are allowed to do between versions.","title":"Action type list"},{"location":"includes/configuring-constraints/","text":"Constraints allow you to restrict your mappings to only work in some situations. To add a constraint fron the 'Constraints and more' or 'Options' tab, tap 'Add constraint'. Go here to see how you can configure constraints.","title":"Configuring constraints"},{"location":"includes/go-to-settings/","text":"Open the Key Mapper settings by opening the menu at the bottom of the home screen and then tapping Settings.","title":"Go to settings"},{"location":"includes/repeat-behaviour/","text":"Stop repeating when trigger is... Released Pressed again This option allows you to choose from 2 simple behaviours. If you choose 'Released', you will need to hold down the trigger key(s) in order to have the key map execute. If you let go of the key(s), the key map will stop. If you choose 'Pressed again', pressing your trigger key(s) once will be sufficient to start your repeating key map. To stop the key map, you will need to press the trigger key(s) a second time.","title":"Repeat behaviour"},{"location":"includes/requires-key-mapper-keyboard/","text":"Attention You need to be using the Key Mapper GUI Keyboard or the Key Mapper Basic Input Method for this to work. Follow this guide to set it up.","title":"Requires key mapper keyboard"},{"location":"includes/screenshot-version/","text":"Info Where screenshots are necessary, this guide uses two devices to demonstrate. OnePlus 7 Pro, Android 10, Dark theme, 1440p, tiny font size Samsung J3 6, Android 5, Light theme, 720p, medium font size App interface pictured: keymapper-2.3.0-alpha-ci.778 This guide is updated to match current stable release UI. Report inaccuracies.","title":"Screenshot version"},{"location":"includes/action-options/action-count/","text":"Action count Key Mapper 2.1.0+ This option serves as a multiplier. If action count is equal to 1 when your mapping is triggered then your action will be performed once. If it is equal to 5 then the action will be performed 5 times, etc.","title":"Action count"},{"location":"includes/action-options/delay-before-next-action/","text":"Delay before next action (ms) Key Mapper 2.2.0+ This option takes effect if you have multiple actions in your mapping. The slider sets the amount of time between this action and the next.","title":"Delay before next action"},{"location":"includes/action-options/delay-until-repeat/","text":"Delay until repeat... (ms) This option sets the amount of time between the first action and the second action (or the first repeat). This is part of the keyboard key behaviour simulation. If you want your repeating action to begin straight away, you can make this 0.","title":"Delay until repeat"},{"location":"includes/action-options/hold-down-behaviour/","text":"Hold down until trigger is... Released Pressed again Key Mapper 2.2.0+ This setting allows you to choose from two behaviours. If 'Released' is selected, holding down your trigger key(s) will translate to holding down the action, for as long as you hold down the trigger key(s). If you choose 'Pressed again', pressing your trigger key(s) once will be sufficient to start holding down the action. To stop the key map, you will need to press the trigger key(s) a second time.","title":"Hold down behaviour"},{"location":"includes/action-options/hold-down/","text":"Hold down Key Mapper 2.1.0+ This setting provides the ability to simulate holding down a key or tapping a coordinate (Android 8.0+). With this turned on (and repeat turned off), the default behaviour is that holding down your trigger will translate to holding down the action, for as long as you hold down the trigger.","title":"Hold down"},{"location":"includes/action-options/repeat-every/","text":"Repeat every... (ms) This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation: Time period (ms) = 1000 / Frequency ('cps')","title":"Repeat every"},{"location":"includes/action-options/repeat/","text":"Repeat When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. The default settings in Key Mapper are designed to emulate that behaviour when 'Repeat' is turned on.","title":"Repeat"},{"location":"includes/action-options/using-hold-down-and-repeat-together/","text":"Key Mapper 2.2.0+ You can use turn on both of these settings to unlock an additional setting. A repeating hold down action behaves like a normal 'Repeat' action in that the action repeats itself with a given frequency. It also behaves like a 'Hold down' action in that each individual action will be held for a certain amount of time in each cycle. Hold down duration (ms) This allows you to set how long the action is held down for before repeating.","title":"Using hold down and repeat together"},{"location":"includes/trigger-options/dont-override-default-action/","text":"Do not override default action This is turned off by default. If this is turned on for a key then the key will still do it's normal thing even though it is remapped. E.g a volume down key with this option will still turn the volume down.","title":"Dont override default action"},{"location":"includes/trigger-options/double-press-delay/","text":"Double press timeout (ms) This is only shown if a trigger has at least one key that needs to double pressed. This option will change the maximum amount of time that a button needs to be double pressed so that it is detected as a double press.","title":"Double press delay"},{"location":"includes/trigger-options/long-press-delay/","text":"Long press delay (ms) This is only shown if a trigger has at least one key that needs to long pressed. This option will change for how long these keys need to be held down.","title":"Long press delay"},{"location":"includes/trigger-options/long-press-double-vibration/","text":"Vibrate when keys are initially pressed and again when long pressed This is only shown if the 'at the same time' trigger mode is selected and the trigger needs to be long pressed.","title":"Long press double vibration"},{"location":"includes/trigger-options/on-screen-message/","text":"Show an on-screen message When this is turned on, the following notice will come up at the bottom of the screen when ever you trigger your mapping.","title":"On screen message"},{"location":"includes/trigger-options/sequence-trigger-timeout/","text":"Sequence trigger timeout (ms) This is only shown if you've chosen the 'in sequence' trigger mode. This option will change the time limit for how fast you need to complete the trigger.","title":"Sequence trigger timeout"},{"location":"includes/trigger-options/trigger-when-screen-off/","text":"Detect trigger when screen is off. ROOT only. These are the buttons which can be detected when the screen is off. Let the developer know about any buttons you would also like to be supported. Volume Up Volume Down Headset button","title":"Trigger when screen off"},{"location":"includes/trigger-options/vibrate/","text":"Vibrate Vibrate duration (ms) Tapping 'Vibrate' will cause your device to vibrate whenever you trigger your mapping. You can change how long your device vibrates with the slider.","title":"Vibrate"},{"location":"user-guide/actions/","text":"App \u00b6 Launch an app. App shortcut \u00b6 Launch an app shortcut. This is a great way to add more functionality to Key Mapper. Key code \u00b6 Attention You need to be using the Key Mapper GUI Keyboard or the Key Mapper Basic Input Method for this to work. Follow this guide to set it up. Input a simple key event with this key code. System \u00b6 There are many actions of this type. They all do something related to your device's system. Toggle/Enable/Disable WiFi \u00b6 Requires ROOT permission on Android 10+ Toggle/Enable/Disable mobile data \u00b6 Requires ROOT permission Key \u00b6 Tap screen (2.1.0+) \u00b6 Key event (2.1.0+) \u00b6 Text \u00b6 Intent (2.3.0+) \u00b6 Phone call (2.3.0+) \u00b6","title":"Actions"},{"location":"user-guide/actions/#app","text":"Launch an app.","title":"App"},{"location":"user-guide/actions/#app-shortcut","text":"Launch an app shortcut. This is a great way to add more functionality to Key Mapper.","title":"App shortcut"},{"location":"user-guide/actions/#key-code","text":"Attention You need to be using the Key Mapper GUI Keyboard or the Key Mapper Basic Input Method for this to work. Follow this guide to set it up. Input a simple key event with this key code.","title":"Key code"},{"location":"user-guide/actions/#system","text":"There are many actions of this type. They all do something related to your device's system.","title":"System"},{"location":"user-guide/actions/#toggleenabledisable-wifi","text":"Requires ROOT permission on Android 10+","title":"Toggle/Enable/Disable WiFi"},{"location":"user-guide/actions/#toggleenabledisable-mobile-data","text":"Requires ROOT permission","title":"Toggle/Enable/Disable mobile data"},{"location":"user-guide/actions/#key","text":"","title":"Key"},{"location":"user-guide/actions/#tap-screen-210","text":"","title":"Tap screen (2.1.0+)"},{"location":"user-guide/actions/#key-event-210","text":"","title":"Key event (2.1.0+)"},{"location":"user-guide/actions/#text","text":"","title":"Text"},{"location":"user-guide/actions/#intent-230","text":"","title":"Intent (2.3.0+)"},{"location":"user-guide/actions/#phone-call-230","text":"","title":"Phone call (2.3.0+)"},{"location":"user-guide/adb-permissions/","text":"If your device is rooted , Key Mapper can grant itself these permissions by enabling the \"Key Mapper has root permissions\" toggle in the settings. If your device is not rooted you must do the following. Prepare ADB (Android Debug Bridge) \u00b6 Tip You might need to attempt this process multiple times because it can be flaky. Enable developer options on your device by going to device Settings -> 'About Phone' and tapping 'Build Number' many times until it says you've enabled developer options. The location of the Build Number may vary between devices. Screenshot Enable USB Debugging in developer options and plug your device into your PC. Screenshot Download the Android SDK platform tools from here and unzip it. Open a terminal/command prompt in the unzipped folder. Type or paste in a terminal: adb devices and your device then click the prompt on your phone to allow USB debugging from your PC. Prompt on phone Type adb devices again and make sure you see the correct output as shown below. Correct command prompt output Incorrect command prompt outputs WRITE_SECURE_SETTINGS \u00b6 If you need more features of Key Mapper, you may grant the app permission to modify the secure settings on your device. Type or paste in a terminal: adb shell pm grant io.github.sds100.keymapper android.permission.WRITE_SECURE_SETTINGS Attention For CI builds (the app icon with a green square) the package name is io.github.sds100.keymapper.ci . For Debug builds (the app icon with a yellow square) the package name is io.github.sds100.keymapper.debug . More features which rely on this set of permission will come in the future. These permissions persist across reboots but need to be granted again if the app is reinstalled. Enabling the Accessibility Service \u00b6 You may wish to enable Key Mapper's accessibility service using ADB if you cannot do so in-app due to manufacturer constraints. To add Key Mapper to the List of the enabled accessibility providers, type or paste in a terminal: adb shell settings put secure enabled_accessibility_services io.github.sds100.keymapper/io.github.sds100.keymapper.service.MyAccessibilityService","title":"ADB Permissions"},{"location":"user-guide/adb-permissions/#prepare-adb-android-debug-bridge","text":"Tip You might need to attempt this process multiple times because it can be flaky. Enable developer options on your device by going to device Settings -> 'About Phone' and tapping 'Build Number' many times until it says you've enabled developer options. The location of the Build Number may vary between devices. Screenshot Enable USB Debugging in developer options and plug your device into your PC. Screenshot Download the Android SDK platform tools from here and unzip it. Open a terminal/command prompt in the unzipped folder. Type or paste in a terminal: adb devices and your device then click the prompt on your phone to allow USB debugging from your PC. Prompt on phone Type adb devices again and make sure you see the correct output as shown below. Correct command prompt output Incorrect command prompt outputs","title":"Prepare ADB (Android Debug Bridge)"},{"location":"user-guide/adb-permissions/#write_secure_settings","text":"If you need more features of Key Mapper, you may grant the app permission to modify the secure settings on your device. Type or paste in a terminal: adb shell pm grant io.github.sds100.keymapper android.permission.WRITE_SECURE_SETTINGS Attention For CI builds (the app icon with a green square) the package name is io.github.sds100.keymapper.ci . For Debug builds (the app icon with a yellow square) the package name is io.github.sds100.keymapper.debug . More features which rely on this set of permission will come in the future. These permissions persist across reboots but need to be granted again if the app is reinstalled.","title":"WRITE_SECURE_SETTINGS"},{"location":"user-guide/adb-permissions/#enabling-the-accessibility-service","text":"You may wish to enable Key Mapper's accessibility service using ADB if you cannot do so in-app due to manufacturer constraints. To add Key Mapper to the List of the enabled accessibility providers, type or paste in a terminal: adb shell settings put secure enabled_accessibility_services io.github.sds100.keymapper/io.github.sds100.keymapper.service.MyAccessibilityService","title":"Enabling the Accessibility Service"},{"location":"user-guide/backup-restore/","text":"You can create and restore backups of any of your mappings in Key Mapper. This menu will be referred to frequently in this guide. Automatically back up mappings \u00b6 You can ask Key Mapper to make backups of your in-app in the Key Mapper Settings menu. To open the Key Mapper Settings, tap the 3 bar menu. You will see the menu as shown at the top of this page. Tap 'Settings'. On this page you can find and change more advanced settings and set preferences. Tap 'Automatically back up key maps to a specified location'. Your file manager will then ask you to choose a folder to save your key maps. Manual back up \u00b6 Everything \u00b6 Tap the 3 bar menu. You will see the menu as shown at the top of this page. Tap 'Back up everything' this will back up all your mappings. Key maps, fingerprint gesture maps... everything. Just key maps \u00b6 On the Key Mapper home screen, press and hold on a key map. You can then select the key maps you wish to back up. Tap the 3 dot menu in the bottom left. Choose 'back up'. Your file manager will then ask you to choose a folder to save your key maps. Just fingerprint gesture maps \u00b6 Click \"Back up all\" at the bottom of the fingerprint page. This will back up all your fingerprint maps even if they don't do anything. Restore mappings \u00b6 Tap the 3 bar menu. You will see the menu as shown at the top of this page. Tap 'Restore'. Your file manager will then ask you to choose a JSON file containing your mappings. The key maps in the backup will be added to your existing key maps so if you want to replace them then hold down on a key map then press the select all button then delete them all.","title":"Back up and Restore (2.1.0+, Android 4.4+)"},{"location":"user-guide/backup-restore/#automatically-back-up-mappings","text":"You can ask Key Mapper to make backups of your in-app in the Key Mapper Settings menu. To open the Key Mapper Settings, tap the 3 bar menu. You will see the menu as shown at the top of this page. Tap 'Settings'. On this page you can find and change more advanced settings and set preferences. Tap 'Automatically back up key maps to a specified location'. Your file manager will then ask you to choose a folder to save your key maps.","title":"Automatically back up mappings"},{"location":"user-guide/backup-restore/#manual-back-up","text":"","title":"Manual back up"},{"location":"user-guide/backup-restore/#everything","text":"Tap the 3 bar menu. You will see the menu as shown at the top of this page. Tap 'Back up everything' this will back up all your mappings. Key maps, fingerprint gesture maps... everything.","title":"Everything"},{"location":"user-guide/backup-restore/#just-key-maps","text":"On the Key Mapper home screen, press and hold on a key map. You can then select the key maps you wish to back up. Tap the 3 dot menu in the bottom left. Choose 'back up'. Your file manager will then ask you to choose a folder to save your key maps.","title":"Just key maps"},{"location":"user-guide/backup-restore/#just-fingerprint-gesture-maps","text":"Click \"Back up all\" at the bottom of the fingerprint page. This will back up all your fingerprint maps even if they don't do anything.","title":"Just fingerprint gesture maps"},{"location":"user-guide/backup-restore/#restore-mappings","text":"Tap the 3 bar menu. You will see the menu as shown at the top of this page. Tap 'Restore'. Your file manager will then ask you to choose a JSON file containing your mappings. The key maps in the backup will be added to your existing key maps so if you want to replace them then hold down on a key map then press the select all button then delete them all.","title":"Restore mappings"},{"location":"user-guide/constraints/","text":"Constraints allow you to restrict your mappings to only work in some situations. If you have more than two constraints you can choose between an 'AND' and 'OR' mode. For 'AND' mode all the constraints need to be satisfied and for 'OR' mode at least one needs to be. App in/not foreground \u00b6 Your mapping will only work if your app of choice is the actively selected window, i.e. on screen and being interacted with. 'App not in foreground' will likewise restrict your map to working only if your app of choice isn't in focus. Specific app playing media (2.2.0+) \u00b6 Your mapping will only work if your app of choice is playing media. Bluetooth device is connected/disconnected \u00b6 Your mapping will only work if a specific bluetooth device is connected/disconnected. Orientation (2.2.0+) \u00b6 This will restrict your gesture map to work only when the device is set to a specific screen orientation. Screen is on/off (ROOT) \u00b6 Only for key maps Attention You must grant Key Mapper root permission and select the option to detect the key map when the screen is off. Only allow the key map to be triggered when the screen is on or off.","title":"Constraints"},{"location":"user-guide/constraints/#app-innot-foreground","text":"Your mapping will only work if your app of choice is the actively selected window, i.e. on screen and being interacted with. 'App not in foreground' will likewise restrict your map to working only if your app of choice isn't in focus.","title":"App in/not foreground"},{"location":"user-guide/constraints/#specific-app-playing-media-220","text":"Your mapping will only work if your app of choice is playing media.","title":"Specific app playing media (2.2.0+)"},{"location":"user-guide/constraints/#bluetooth-device-is-connecteddisconnected","text":"Your mapping will only work if a specific bluetooth device is connected/disconnected.","title":"Bluetooth device is connected/disconnected"},{"location":"user-guide/constraints/#orientation-220","text":"This will restrict your gesture map to work only when the device is set to a specific screen orientation.","title":"Orientation (2.2.0+)"},{"location":"user-guide/constraints/#screen-is-onoff-root","text":"Only for key maps Attention You must grant Key Mapper root permission and select the option to detect the key map when the screen is off. Only allow the key map to be triggered when the screen is on or off.","title":"Screen is on/off (ROOT)"},{"location":"user-guide/fingerprint-gestures/","text":"This page aims to explain how to remap fingerprint gestures. For specific troubleshooting, consult the FAQ. Warning This feature of Key Mapper does not support all devices. If you are having trouble with remapping fingerprint gestures, make sure you have read and understood the disclaimer below. Info Where screenshots are necessary, this guide uses two devices to demonstrate. OnePlus 7 Pro, Android 10, Dark theme, 1440p, tiny font size Samsung J3 6, Android 5, Light theme, 720p, medium font size App interface pictured: keymapper-2.3.0-alpha-ci.778 This guide is updated to match current stable release UI. Report inaccuracies. Disclaimer \u00b6 On some devices, the fingerprint sensor can be remapped by Key Mapper. There are generally 3 categories of devices with varying degrees of support for this feature: Some devices have a fingerprint sensor that can detect directional gestures (up, down, left, right swipes) and your device allows third party apps such as Key Mapper to access and remap these. Some devices have a fingerprint sensor that can detect directional gestures (up, down, left, right swipes) but your device does not allow Key Mapper to access them. Some devices have a fingerprint sensor that is not capable of detecting directional gestures. This generally includes in-screen fingerprint sensors. If your device falls into categories 2 or 3, you cannot remap fingerprint gestures, and you shouldn't continue with this guide. Even if your device allows for directional fingerprint gestures for system use, they may not allow third party apps such as Key Mapper to access them and therefore there is nothing the developer of Key Mapper can do to help you. If your device supports remapping directional fingerprint gestures, this guide is for you. Remapping fingerprint gestures \u00b6 From the Key Mapper home screen, tab the 'Fingerprint' tab. Here you can set actions for the 4 directional gestures. Tapping any one of them will bring you to the action assignment screen for that gesture and by tapping 'Add action' at the bottom of the screen you can assign the action. Click here for an explanation of all the actions you can choose from. After choosing an action (or actions) you can press the save icon in the bottom right to save the mapping. Make sure to save your fingerprint gesture map after applying these changes. Customising actions \u00b6 If you would like to customise how the actions are performed you can tap the 3 dot menu to the right of an action. On this screen you can choose from the following options: Hold down until swiped again This option allows for keycode actions to be 'held', much like you could hold down a physical keyboard key. The action will continue until the same gesture is performed a second time. Delay before next action (ms) Key Mapper 2.2.0+ This option takes effect if you have multiple actions in your mapping. The slider sets the amount of time between this action and the next. Action count Key Mapper 2.1.0+ This option serves as a multiplier. If action count is equal to 1 when your mapping is triggered then your action will be performed once. If it is equal to 5 then the action will be performed 5 times, etc. Repeat until swiped again When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. Repeat every... (ms) This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation: Time period (ms) = 1000 / Frequency ('cps') Tap 'Save' to close the menu, preserving changes. Special options \u00b6 For extra customisation, tap the 'Constraints and more' tab at the top of the screen when editing or creating a gesture map. On this screen you can choose from the following options: Vibrate Vibrate duration (ms) Tapping 'Vibrate' will cause your device to vibrate whenever you trigger your mapping. You can change how long your device vibrates with the slider. Show an on-screen message When this is turned on, the following notice will come up at the bottom of the screen when ever you trigger your mapping. Adding constraints \u00b6 Constraints allow you to restrict your mappings to only work in some situations. To add a constraint fron the 'Constraints and more' or 'Options' tab, tap 'Add constraint'. Go here to see how you can configure constraints.","title":"Fingerprint Gesture Maps (2.2.0+, Android 8.0+)"},{"location":"user-guide/fingerprint-gestures/#disclaimer","text":"On some devices, the fingerprint sensor can be remapped by Key Mapper. There are generally 3 categories of devices with varying degrees of support for this feature: Some devices have a fingerprint sensor that can detect directional gestures (up, down, left, right swipes) and your device allows third party apps such as Key Mapper to access and remap these. Some devices have a fingerprint sensor that can detect directional gestures (up, down, left, right swipes) but your device does not allow Key Mapper to access them. Some devices have a fingerprint sensor that is not capable of detecting directional gestures. This generally includes in-screen fingerprint sensors. If your device falls into categories 2 or 3, you cannot remap fingerprint gestures, and you shouldn't continue with this guide. Even if your device allows for directional fingerprint gestures for system use, they may not allow third party apps such as Key Mapper to access them and therefore there is nothing the developer of Key Mapper can do to help you. If your device supports remapping directional fingerprint gestures, this guide is for you.","title":"Disclaimer"},{"location":"user-guide/fingerprint-gestures/#remapping-fingerprint-gestures","text":"From the Key Mapper home screen, tab the 'Fingerprint' tab. Here you can set actions for the 4 directional gestures. Tapping any one of them will bring you to the action assignment screen for that gesture and by tapping 'Add action' at the bottom of the screen you can assign the action. Click here for an explanation of all the actions you can choose from. After choosing an action (or actions) you can press the save icon in the bottom right to save the mapping. Make sure to save your fingerprint gesture map after applying these changes.","title":"Remapping fingerprint gestures"},{"location":"user-guide/fingerprint-gestures/#customising-actions","text":"If you would like to customise how the actions are performed you can tap the 3 dot menu to the right of an action. On this screen you can choose from the following options: Hold down until swiped again This option allows for keycode actions to be 'held', much like you could hold down a physical keyboard key. The action will continue until the same gesture is performed a second time. Delay before next action (ms) Key Mapper 2.2.0+ This option takes effect if you have multiple actions in your mapping. The slider sets the amount of time between this action and the next. Action count Key Mapper 2.1.0+ This option serves as a multiplier. If action count is equal to 1 when your mapping is triggered then your action will be performed once. If it is equal to 5 then the action will be performed 5 times, etc. Repeat until swiped again When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. Repeat every... (ms) This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation: Time period (ms) = 1000 / Frequency ('cps') Tap 'Save' to close the menu, preserving changes.","title":"Customising actions"},{"location":"user-guide/fingerprint-gestures/#special-options","text":"For extra customisation, tap the 'Constraints and more' tab at the top of the screen when editing or creating a gesture map. On this screen you can choose from the following options: Vibrate Vibrate duration (ms) Tapping 'Vibrate' will cause your device to vibrate whenever you trigger your mapping. You can change how long your device vibrates with the slider. Show an on-screen message When this is turned on, the following notice will come up at the bottom of the screen when ever you trigger your mapping.","title":"Special options"},{"location":"user-guide/fingerprint-gestures/#adding-constraints","text":"Constraints allow you to restrict your mappings to only work in some situations. To add a constraint fron the 'Constraints and more' or 'Options' tab, tap 'Add constraint'. Go here to see how you can configure constraints.","title":"Adding constraints"},{"location":"user-guide/keymaps/","text":"Refer to the Quick Start Guide for help with creating key maps. This page gives more detail about every option. Make sure to save your key map after applying these changes. Trigger \u00b6 A trigger is a combination of keys that must be pressed in a certain way to 'trigger' the key map. A key map can only have one trigger. You can change the order of the keys by holding down on one and then dragging it into a new position. This is the page to create a trigger for a key map. Trigger modes \u00b6 A trigger with one key doesn't have a mode. Triggers with more than one key can be one of two trigger modes: 'parallel' and 'sequence'. The button for a parallel trigger says 'at the same time' because this is more descriptive. The plus symbol between the keys will change to an arrow if the trigger is a sequence trigger. The developer has called them \"parallel\" triggers because you press it is one word and you press the keys in parallel. Parallel \u00b6 You must press the keys down at the same time to trigger the key map and the must be pressed down in the order as displayed from top to bottom. E.g For the trigger screenshot you must press volume up first and then volume down and not the other away around. Sequence \u00b6 You must press the keys down and up one after another to trigger the key map in a specified amount of time. This timeout is 1000ms by default and this default can be changed in the app settings . You can change the timeout for a specific key map by going to the options page for the key map as explained further down this page. Key click type \u00b6 There are 3 click types: short press, long press and double press. Parallel triggers can only be short pressed or long pressed. The click type can be customised for each key in a sequence trigger by pressing on the 3 dot button on each key. Short press \u00b6 This is a simple press of the key and there are no restrictions to how you press it. The key map is triggered when this key is pressed down and doesn't need to be released to activate it. There are no options for this click type. Long press \u00b6 You need to hold down the key for at least some amount of time for it to trigger the key map. This is 500ms by default and this default can be changed in the app settings . You can change the long press delay for all keys in a key map by going to the options page for the key map as explained further down this page. Double press \u00b6 You need to press down and release the key in rapid succession for it to trigger the key map. You must do this within 300ms by default and this default can be changed in the app settings . You can change the double press timeout for all keys in a key map by going to the options page for the key map as explained further down this page. Key device \u00b6 Tap the button on a key so that Key Mapper only detects the key when it comes from a specific device. The default device is 'this device', which means the Android device that you've installed Key Mapper on. External devices are only listed if they are connected to your Android device when you configure the key map. If you have multiple devices with the same name then turn on the setting to show the first 5 characters of the device ID in the app settings . This will help you distinguish between them. Key options \u00b6 This menu pops up if you press the 3 dot button on a key. Do not override default action \u00b6 Do not override default action This is turned off by default. If this is turned on for a key then the key will still do it's normal thing even though it is remapped. E.g a volume down key with this option will still turn the volume down. Click type \u00b6 This will change the click type for a key in a sequence trigger. A parallel trigger key will not have the click type option because all the keys have the same click type. You will find the buttons to change a parallel trigger's click type above the trigger mode buttons as shown in the image at the top of this Trigger section. Customising actions \u00b6 You can tap the 3 stacked dots to the right of the action's name to bring up the following menu. Here you can customise a lot of the operation of your key map, including timing and multipliers. Delay before next action (ms) Key Mapper 2.2.0+ This option takes effect if you have multiple actions in your mapping. The slider sets the amount of time between this action and the next. Action count Key Mapper 2.1.0+ This option serves as a multiplier. If action count is equal to 1 when your mapping is triggered then your action will be performed once. If it is equal to 5 then the action will be performed 5 times, etc. Repeating actions \u00b6 Repeat When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. The default settings in Key Mapper are designed to emulate that behaviour when 'Repeat' is turned on. Repeat every... (ms) This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation: Time period (ms) = 1000 / Frequency ('cps') Delay until repeat... (ms) This option sets the amount of time between the first action and the second action (or the first repeat). This is part of the keyboard key behaviour simulation. If you want your repeating action to begin straight away, you can make this 0. Hold down actions \u00b6 Hold down Key Mapper 2.1.0+ This setting provides the ability to simulate holding down a key or tapping a coordinate (Android 8.0+). With this turned on (and repeat turned off), the default behaviour is that holding down your trigger will translate to holding down the action, for as long as you hold down the trigger. Hold down until trigger is... Released Pressed again Key Mapper 2.2.0+ This setting allows you to choose from two behaviours. If 'Released' is selected, holding down your trigger key(s) will translate to holding down the action, for as long as you hold down the trigger key(s). If you choose 'Pressed again', pressing your trigger key(s) once will be sufficient to start holding down the action. To stop the key map, you will need to press the trigger key(s) a second time. Using 'Hold down' and 'Repeat' together \u00b6 Key Mapper 2.2.0+ You can use turn on both of these settings to unlock an additional setting. A repeating hold down action behaves like a normal 'Repeat' action in that the action repeats itself with a given frequency. It also behaves like a 'Hold down' action in that each individual action will be held for a certain amount of time in each cycle. Hold down duration (ms) This allows you to set how long the action is held down for before repeating. Special options \u00b6 There are options for a key map under the 'Options' or 'Constraints and more' tab. Here are explanations of each option. Trigger from other apps (2.3.0+) \u00b6 This allows you to trigger the key map by using a shortcut or by sending an Intent to Key Mapper. Turning this off will stop any shortcuts or Intents for this key map from working. Home screen (launcher) shortcut \u00b6 You can create a home screen shortcut by tapping \"create launcher shortcut\" or by adding the shortcut to your home screen in the same way as a widget. You can also use this shortcut from automation apps like Tasker and Automate without having to create a home screen shortcut. Intent \u00b6 There are many apps that can automate broadcasting Intents such as Tasker and Automate. Intent action \u00b6 io.github.sds100.keymapper.TRIGGER_KEYMAP_BY_UID Intent string extra \u00b6 io.github.sds100.keymapper.KEYMAP_UID and the value is the UUID of the key map. You can copy the UUID in Key Mapper by turning on the \"Trigger from other apps\" option. Intent package (optional but recommended) \u00b6 io.github.sds100.keymapper This will only send the Intent to Key Mapper and no other packages. Warning Add .debug or .ci to the end of all io.github.sds100.keymapper instances in the action, extra and package if your Key Mapper build is a debug or ci build respectively. Show an on-screen message When this is turned on, the following notice will come up at the bottom of the screen when ever you trigger your mapping. You can have your device vibrate instead of an on-screen message if you want. This option is below. Vibrate Vibrate duration (ms) Tapping 'Vibrate' will cause your device to vibrate whenever you trigger your mapping. You can change how long your device vibrates with the slider. Vibrate when keys are initially pressed and again when long pressed This is only shown if the 'at the same time' trigger mode is selected and the trigger needs to be long pressed. This behaves similarly to the on-screen message option above. Detect trigger when screen is off. ROOT only. These are the buttons which can be detected when the screen is off. Let the developer know about any buttons you would also like to be supported. Volume Up Volume Down Headset button Long press delay (ms) This is only shown if a trigger has at least one key that needs to long pressed. This option will change for how long these keys need to be held down. Double press timeout (ms) This is only shown if a trigger has at least one key that needs to double pressed. This option will change the maximum amount of time that a button needs to be double pressed so that it is detected as a double press. Sequence trigger timeout (ms) This is only shown if you've chosen the 'in sequence' trigger mode. This option will change the time limit for how fast you need to complete the trigger. Adding constraints \u00b6 Constraints allow you to restrict your mappings to only work in some situations. To add a constraint fron the 'Constraints and more' or 'Options' tab, tap 'Add constraint'. Go here to see how you can configure constraints.","title":"Key Maps"},{"location":"user-guide/keymaps/#trigger","text":"A trigger is a combination of keys that must be pressed in a certain way to 'trigger' the key map. A key map can only have one trigger. You can change the order of the keys by holding down on one and then dragging it into a new position. This is the page to create a trigger for a key map.","title":"Trigger"},{"location":"user-guide/keymaps/#trigger-modes","text":"A trigger with one key doesn't have a mode. Triggers with more than one key can be one of two trigger modes: 'parallel' and 'sequence'. The button for a parallel trigger says 'at the same time' because this is more descriptive. The plus symbol between the keys will change to an arrow if the trigger is a sequence trigger. The developer has called them \"parallel\" triggers because you press it is one word and you press the keys in parallel.","title":"Trigger modes"},{"location":"user-guide/keymaps/#parallel","text":"You must press the keys down at the same time to trigger the key map and the must be pressed down in the order as displayed from top to bottom. E.g For the trigger screenshot you must press volume up first and then volume down and not the other away around.","title":"Parallel"},{"location":"user-guide/keymaps/#sequence","text":"You must press the keys down and up one after another to trigger the key map in a specified amount of time. This timeout is 1000ms by default and this default can be changed in the app settings . You can change the timeout for a specific key map by going to the options page for the key map as explained further down this page.","title":"Sequence"},{"location":"user-guide/keymaps/#key-click-type","text":"There are 3 click types: short press, long press and double press. Parallel triggers can only be short pressed or long pressed. The click type can be customised for each key in a sequence trigger by pressing on the 3 dot button on each key.","title":"Key click type"},{"location":"user-guide/keymaps/#short-press","text":"This is a simple press of the key and there are no restrictions to how you press it. The key map is triggered when this key is pressed down and doesn't need to be released to activate it. There are no options for this click type.","title":"Short press"},{"location":"user-guide/keymaps/#long-press","text":"You need to hold down the key for at least some amount of time for it to trigger the key map. This is 500ms by default and this default can be changed in the app settings . You can change the long press delay for all keys in a key map by going to the options page for the key map as explained further down this page.","title":"Long press"},{"location":"user-guide/keymaps/#double-press","text":"You need to press down and release the key in rapid succession for it to trigger the key map. You must do this within 300ms by default and this default can be changed in the app settings . You can change the double press timeout for all keys in a key map by going to the options page for the key map as explained further down this page.","title":"Double press"},{"location":"user-guide/keymaps/#key-device","text":"Tap the button on a key so that Key Mapper only detects the key when it comes from a specific device. The default device is 'this device', which means the Android device that you've installed Key Mapper on. External devices are only listed if they are connected to your Android device when you configure the key map. If you have multiple devices with the same name then turn on the setting to show the first 5 characters of the device ID in the app settings . This will help you distinguish between them.","title":"Key device"},{"location":"user-guide/keymaps/#key-options","text":"This menu pops up if you press the 3 dot button on a key.","title":"Key options"},{"location":"user-guide/keymaps/#do-not-override-default-action","text":"Do not override default action This is turned off by default. If this is turned on for a key then the key will still do it's normal thing even though it is remapped. E.g a volume down key with this option will still turn the volume down.","title":"Do not override default action"},{"location":"user-guide/keymaps/#click-type","text":"This will change the click type for a key in a sequence trigger. A parallel trigger key will not have the click type option because all the keys have the same click type. You will find the buttons to change a parallel trigger's click type above the trigger mode buttons as shown in the image at the top of this Trigger section.","title":"Click type"},{"location":"user-guide/keymaps/#customising-actions","text":"You can tap the 3 stacked dots to the right of the action's name to bring up the following menu. Here you can customise a lot of the operation of your key map, including timing and multipliers. Delay before next action (ms) Key Mapper 2.2.0+ This option takes effect if you have multiple actions in your mapping. The slider sets the amount of time between this action and the next. Action count Key Mapper 2.1.0+ This option serves as a multiplier. If action count is equal to 1 when your mapping is triggered then your action will be performed once. If it is equal to 5 then the action will be performed 5 times, etc.","title":"Customising actions"},{"location":"user-guide/keymaps/#repeating-actions","text":"Repeat When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. The default settings in Key Mapper are designed to emulate that behaviour when 'Repeat' is turned on. Repeat every... (ms) This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation: Time period (ms) = 1000 / Frequency ('cps') Delay until repeat... (ms) This option sets the amount of time between the first action and the second action (or the first repeat). This is part of the keyboard key behaviour simulation. If you want your repeating action to begin straight away, you can make this 0.","title":"Repeating actions"},{"location":"user-guide/keymaps/#hold-down-actions","text":"Hold down Key Mapper 2.1.0+ This setting provides the ability to simulate holding down a key or tapping a coordinate (Android 8.0+). With this turned on (and repeat turned off), the default behaviour is that holding down your trigger will translate to holding down the action, for as long as you hold down the trigger. Hold down until trigger is... Released Pressed again Key Mapper 2.2.0+ This setting allows you to choose from two behaviours. If 'Released' is selected, holding down your trigger key(s) will translate to holding down the action, for as long as you hold down the trigger key(s). If you choose 'Pressed again', pressing your trigger key(s) once will be sufficient to start holding down the action. To stop the key map, you will need to press the trigger key(s) a second time.","title":"Hold down actions"},{"location":"user-guide/keymaps/#using-hold-down-and-repeat-together","text":"Key Mapper 2.2.0+ You can use turn on both of these settings to unlock an additional setting. A repeating hold down action behaves like a normal 'Repeat' action in that the action repeats itself with a given frequency. It also behaves like a 'Hold down' action in that each individual action will be held for a certain amount of time in each cycle. Hold down duration (ms) This allows you to set how long the action is held down for before repeating.","title":"Using 'Hold down' and 'Repeat' together"},{"location":"user-guide/keymaps/#special-options","text":"There are options for a key map under the 'Options' or 'Constraints and more' tab. Here are explanations of each option.","title":"Special options"},{"location":"user-guide/keymaps/#trigger-from-other-apps-230","text":"This allows you to trigger the key map by using a shortcut or by sending an Intent to Key Mapper. Turning this off will stop any shortcuts or Intents for this key map from working.","title":"Trigger from other apps (2.3.0+)"},{"location":"user-guide/keymaps/#home-screen-launcher-shortcut","text":"You can create a home screen shortcut by tapping \"create launcher shortcut\" or by adding the shortcut to your home screen in the same way as a widget. You can also use this shortcut from automation apps like Tasker and Automate without having to create a home screen shortcut.","title":"Home screen (launcher) shortcut"},{"location":"user-guide/keymaps/#intent","text":"There are many apps that can automate broadcasting Intents such as Tasker and Automate.","title":"Intent"},{"location":"user-guide/keymaps/#adding-constraints","text":"Constraints allow you to restrict your mappings to only work in some situations. To add a constraint fron the 'Constraints and more' or 'Options' tab, tap 'Add constraint'. Go here to see how you can configure constraints.","title":"Adding constraints"},{"location":"user-guide/settings/","text":"Open the Key Mapper settings by opening the menu at the bottom of the home screen and then tapping Settings. Automatically change the on-screen keyboard when a device connects/disconnects \u00b6 Attention You must grant Key Mapper WRITE_SECURE_SETTINGS permission for this to notification to be shown. Alternatively on Android 11+ you can just turn on the accessibility service. Info This is restricted to Bluetooth devices in Key Mapper 2.2.0 and older. After updating to Key Mapper 2.3.0 you will need to set this up again because the data for the Bluetooth devices can't be migrated in a way that the new feature will work. The last used Key Mapper keyboard will be automatically selected when a chosen device is connected. Your normal keyboard will be automatically selected when the device disconnects. Automatically change the on-screen keyboard when toggling key maps \u00b6 Attention You must grant Key Mapper WRITE_SECURE_SETTINGS permission for this to notification to be shown. Alternatively on Android 11+ you can just turn on the accessibility service. The last used Key Mapper keyboard will be automatically selected when you unpause your key maps. Your normal keyboard will be automatically selected when they are paused. Toggle Key Mapper keyboard notification \u00b6 Attention You must grant Key Mapper WRITE_SECURE_SETTINGS permission for this to notification to be shown. Alternatively on Android 11+ you can just turn on the accessibility service. This notification will select the last used Key Mapper keyboard if you are using your normal keyboard and will select your normal keyboard if the Key Mapper keyboard is being used. Automatically show keyboard picker (up to Android 9.0) \u00b6 Attention This requires ROOT permission on Android 8.1 and Android 9.0 because Android blocked the ability for apps to show the input method picker when they are running in the background. Android removed the ability to show this even with ROOT on versions later than Android 9.0. Info This is restricted to Bluetooth devices in Key Mapper 2.2.0 and older. After updating to Key Mapper 2.3.0 you will need to set this up again because the data for the Bluetooth devices can't be migrated in a way that the new feature will work. When a device that you have chosen connects or disconnects the keyboard picker will show automatically. Choose the devices below. Key Mapper has root permission \u00b6 Don't turn this on if you don't know what 'rooting' is. Read more here . This setting needs to be turned on for some features in Key Mapper to work. You must grant Key Mapper root permission in your root management app (e.g Magisk, SuperSU) before you turn this on. Workaround for Android 11 bug that sets the device id for input events to -1 (2.3.0+, Android 11+) \u00b6 Info See the Android 11 bug on Google's issue tracker here . There is a bug on Android 11 that changes the device id of all input events (e.g pressing buttons, moving joysticks) to -1 when any accessibility services are enabled. This means that apps can't determine which kind of device an input event came from. This breaks keyboards that aren't using an American English keyboard layout because Android uses the device id of a key event to determine what character to type when a key is pressed. If the device id is -1 Android defaults to the American English keyboard layout. Warning This feature will not fix game controllers because joysticks and triggers send motion events and not key events. Steps to work around this bug... Enable the Key Mapper accessibility service. Open the Key Mapper settings by opening the menu at the bottom of the home screen and then tapping Settings. Scroll down to the 'Workaround for Android 11 bug that sets the device id for input events to -1' setting and turn it on. To avoid confusion and headaches read about how input methods work with Key Mapper here . Tap 'Enable the Key Mapper keyboard' and turn on the Key Mapper GUI Keyboard or the Key Mapper Basic Input Method. Tap 'Use the Key Mapper keyboard' and select the keyboard that you just enabled. It is recommended that you setup the setting to automatically change the on-screen keyboard when the device connects and disconnects. You can find this further up this page. This is useful if you don't want to use one of the Key Mapper keyboards all the time. If you want to change the keyboard manually then see this question in the faq. Connect the device that you want to fix to your Android device. Tap 'Choose devices' and select the devices that should be fixed. Your keyboard layout should be fixed! \ud83c\udf89 If you're having issues checkout the FAQ below or join the Discord server. Faq Can I use a non Key Mapper keyboard like Gboard instead? No because Key Mapper isn't allowed to tell other input methods what to type. Can I add support for joysticks and triggers? No because Android doesn't allow apps to input motion events to other apps.","title":"Settings"},{"location":"user-guide/settings/#automatically-change-the-on-screen-keyboard-when-a-device-connectsdisconnects","text":"Attention You must grant Key Mapper WRITE_SECURE_SETTINGS permission for this to notification to be shown. Alternatively on Android 11+ you can just turn on the accessibility service. Info This is restricted to Bluetooth devices in Key Mapper 2.2.0 and older. After updating to Key Mapper 2.3.0 you will need to set this up again because the data for the Bluetooth devices can't be migrated in a way that the new feature will work. The last used Key Mapper keyboard will be automatically selected when a chosen device is connected. Your normal keyboard will be automatically selected when the device disconnects.","title":"Automatically change the on-screen keyboard when a device connects/disconnects"},{"location":"user-guide/settings/#automatically-change-the-on-screen-keyboard-when-toggling-key-maps","text":"Attention You must grant Key Mapper WRITE_SECURE_SETTINGS permission for this to notification to be shown. Alternatively on Android 11+ you can just turn on the accessibility service. The last used Key Mapper keyboard will be automatically selected when you unpause your key maps. Your normal keyboard will be automatically selected when they are paused.","title":"Automatically change the on-screen keyboard when toggling key maps"},{"location":"user-guide/settings/#toggle-key-mapper-keyboard-notification","text":"Attention You must grant Key Mapper WRITE_SECURE_SETTINGS permission for this to notification to be shown. Alternatively on Android 11+ you can just turn on the accessibility service. This notification will select the last used Key Mapper keyboard if you are using your normal keyboard and will select your normal keyboard if the Key Mapper keyboard is being used.","title":"Toggle Key Mapper keyboard notification"},{"location":"user-guide/settings/#automatically-show-keyboard-picker-up-to-android-90","text":"Attention This requires ROOT permission on Android 8.1 and Android 9.0 because Android blocked the ability for apps to show the input method picker when they are running in the background. Android removed the ability to show this even with ROOT on versions later than Android 9.0. Info This is restricted to Bluetooth devices in Key Mapper 2.2.0 and older. After updating to Key Mapper 2.3.0 you will need to set this up again because the data for the Bluetooth devices can't be migrated in a way that the new feature will work. When a device that you have chosen connects or disconnects the keyboard picker will show automatically. Choose the devices below.","title":"Automatically show keyboard picker (up to Android 9.0)"},{"location":"user-guide/settings/#key-mapper-has-root-permission","text":"Don't turn this on if you don't know what 'rooting' is. Read more here . This setting needs to be turned on for some features in Key Mapper to work. You must grant Key Mapper root permission in your root management app (e.g Magisk, SuperSU) before you turn this on.","title":"Key Mapper has root permission"},{"location":"user-guide/settings/#workaround-for-android-11-bug-that-sets-the-device-id-for-input-events-to-1-230-android-11","text":"Info See the Android 11 bug on Google's issue tracker here . There is a bug on Android 11 that changes the device id of all input events (e.g pressing buttons, moving joysticks) to -1 when any accessibility services are enabled. This means that apps can't determine which kind of device an input event came from. This breaks keyboards that aren't using an American English keyboard layout because Android uses the device id of a key event to determine what character to type when a key is pressed. If the device id is -1 Android defaults to the American English keyboard layout. Warning This feature will not fix game controllers because joysticks and triggers send motion events and not key events. Steps to work around this bug... Enable the Key Mapper accessibility service. Open the Key Mapper settings by opening the menu at the bottom of the home screen and then tapping Settings. Scroll down to the 'Workaround for Android 11 bug that sets the device id for input events to -1' setting and turn it on. To avoid confusion and headaches read about how input methods work with Key Mapper here . Tap 'Enable the Key Mapper keyboard' and turn on the Key Mapper GUI Keyboard or the Key Mapper Basic Input Method. Tap 'Use the Key Mapper keyboard' and select the keyboard that you just enabled. It is recommended that you setup the setting to automatically change the on-screen keyboard when the device connects and disconnects. You can find this further up this page. This is useful if you don't want to use one of the Key Mapper keyboards all the time. If you want to change the keyboard manually then see this question in the faq. Connect the device that you want to fix to your Android device. Tap 'Choose devices' and select the devices that should be fixed. Your keyboard layout should be fixed! \ud83c\udf89 If you're having issues checkout the FAQ below or join the Discord server. Faq Can I use a non Key Mapper keyboard like Gboard instead? No because Key Mapper isn't allowed to tell other input methods what to type. Can I add support for joysticks and triggers? No because Android doesn't allow apps to input motion events to other apps.","title":"Workaround for Android 11 bug that sets the device id for input events to -1 (2.3.0+, Android 11+)"}]}